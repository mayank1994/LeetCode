/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        
        return partition(lists, 0, lists.length-1);
        
    }
    
    public static ListNode partition(ListNode[] lists, int s, int l){
        
        if(s==l)
            return lists[s];
        if(s<l)
        {
            int mid=(s+l)/2;
            ListNode l1=partition(lists,s,mid);
            ListNode l2=partition(lists,mid+1,l);
            return merge(l1,l2);
        }
        else{
            return null;
        }
    }
    
    
    public static ListNode merge(ListNode l1, ListNode l2){
        if(l1==null)
            return l2;
        
        if(l2==null)
            return l1;
        
        if(l1.val<l2.val){
            l1.next = merge(l1.next,l2);
            return l1;
        }
        
        else{
            l2.next = merge(l1,l2.next);
            return l2;
        }
     }
    
    
}
