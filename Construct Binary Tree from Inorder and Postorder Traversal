/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    private int pS=0;
    
    public TreeNode buildTree(int[] inorder, int[] postorder) {
       int len = inorder.length;
       pS = len-1;
       return buildTree(inorder, 0, len-1, postorder);
   }
   
    private TreeNode buildTree(int[] inorder, int iStart, int iEnd, int[] postorder) {
        if(iEnd < iStart || iStart < 0) 
            return null;
        
        TreeNode root = new TreeNode(postorder[pS]);
        pS--;
        int index = -1;
        
        for(int i=iStart;i<=iEnd;i++){
            if(inorder[i] == root.val) {
                index = i;
                break;
            }
        }
        root.right = buildTree(inorder, index+1, iEnd, postorder);
        root.left = buildTree(inorder, iStart, index-1, postorder);
       
        return root;
   }
}
