class WordDistance {

    HashMap<String, ArrayList<Integer>> location;
    
    public WordDistance(String[] words) {
         
        this.location = new HashMap<String, ArrayList<Integer>>();
        
        for(int i=0; i<words.length; i++){
            ArrayList<Integer> loc = this.location.getOrDefault(words[i], new ArrayList<Integer>());
            loc.add(i);
            this.location.put(words[i], loc);
        }
        
    }
    
    public int shortest(String word1, String word2) {
        
        ArrayList<Integer> loc1, loc2;
        loc1 = this.location.get(word1);
        loc2 = this.location.get(word2);
        
        int l1=0, l2=0, mindiff=Integer.MAX_VALUE;
        
        while(l1<loc1.size() && l2<loc2.size()){
            mindiff = Math.min(mindiff, Math.abs(loc1.get(l1) - loc2.get(l2)));
            if(loc1.get(l1)<loc2.get(l2))
                l1++;
            else
                l2++;
            
        }
        
        return mindiff;
    }
}

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(words);
 * int param_1 = obj.shortest(word1,word2);
 */
