class Solution {
    public String minWindow(String s, String t) {
        
        Map<Character,Integer> map = new HashMap<Character, Integer>();
        //count of unique chars in T
        for(int i=0; i<t.length(); i++){
            int count = map.getOrDefault(t.charAt(i),0);
            map.put(t.charAt(i), count+1);
        }
        
        int required = map.size();
        
        int l=0, r=0;
        int formed=0;
        
        Map<Character, Integer> window = new HashMap<Character, Integer>();
        
        int[] res = {-1,0,0};
        
        while(r<s.length()){
            char c=s.charAt(r);
            int count = window.getOrDefault(c,0);
            window.put(c, count+1);
            
            if(map.containsKey(c) && window.get(c).intValue()==map.get(c).intValue())
                formed++;
            
            while(l<=r && formed == required){
                c=s.charAt(l);
                if(res[0]==-1 || r-l+1<res[0]){
                    res[0]=r-l+1;
                    res[1]=l;
                    res[2]=r;
                }
                
                window.put(c, window.get(c)-1);
                if(map.containsKey(c) && window.get(c).intValue() < map.get(c).intValue())
                    formed--;
                
                l++;
            }
            r++;
            
        }
        
              return res[0] == -1 ? "" : s.substring(res[1], res[2] + 1);

    }
}
